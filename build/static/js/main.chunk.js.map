{"version":3,"sources":["db.js","NotFound.js","location.js","history.js","name.js","GameCell.js","NewGame.js","Rankscore.js","App.js","index.js"],"names":["db","Dexie","version","stores","Score","NotFound","react_default","a","createElement","react_router_dom","to","Component","Location","className","onSubmit","this","props","LocationSubmit","name","type","value","createBrowserHistory","Name","l","history","push","NameSubmit","GameCell","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getStyleString","left","x","toFixed","top","y","transform","dx","dy","clickEvent","console","log","removeCell","id","style","onClick","src","concat","alt","Game","getMovementVal","max","min","Math","random","floor","clickedCell","state","cells","find","score","parseInt","newScore","currentScore","setState","filter","newCell","getNewCell","game","assertThisInitialized","UUID","v4","canvas","offsetWidth","offsetHeight","settings","maxMoveX","minMoveX","maxMoveY","minMoveY","goodBallScore","badBallScore","addCells","tempCells","i","goodBalls","badBalls","endGame","run","gameTick","startTimer","setTimeout","time","moveCells","newCells","length","cell","abs","root","setInterval","timeLeft","clearInterval","framePerSecond","timerInterval","location","table","add","data","balls","runInterval","document","getElementById","_this2","class","ref","node","height","map","el","src_GameCell","display","list","all_scores","scores","sort","b","pic","msg","App","API_URL","Allscores","sted","online","bind","renderdata","getData","interval","audioplayer","play","_this3","navigator","onLine","fetch","then","response","json","catch","error","toArray","event","preventDefault","target","_this4","navn","lokation","nummer","method","headers","Accept","Content-Type","body","JSON","stringify","err","clear","er","_this5","react_router","autoPlay","loop","exact","path","render","src_location","assign","src_name","NewGame","Rankscore","match","params","component","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.dc879cc6.chunk.js","sourcesContent":["import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('Rankscore');\r\ndb.version(1).stores({ Score: '++id' });\r\n\r\nexport default db;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass NotFound extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>404 Not Found</h3>\r\n\r\n                <Link to={'/'}>Go back to the front page...</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, {Component} from 'react';\r\n\r\nclass Location extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"midt\">\r\n               <form onSubmit={this.props.LocationSubmit}>\r\n                   <p>Location:</p>\r\n                   <input name=\"location\" type=\"text\" />\r\n                   <br/>\r\n                   <input value=\"Add Location\" type=\"submit\" className=\"submit\"/>\r\n               </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Location;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, {Component} from 'react';\r\nimport history from './history';\r\n\r\nclass  Name extends Component {\r\n    componentDidMount() {\r\n        if(this.props.l === '') {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"midt\">\r\n            <h3>Location: {this.props.l}</h3>\r\n               <form onSubmit={this.props.NameSubmit}>\r\n                   <p>Name:</p>\r\n                   <input name=\"name\" type=\"text\" />\r\n                   <br/>\r\n                   <input value=\"Start\" type=\"submit\" className=\"submit\"/>\r\n               </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Name;\r\n","import React, {Component} from 'react';\r\n//import Game from \"./Game\";\r\n\r\nclass GameCell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n    }\r\n\r\n    getStyleString = () => {\r\n        let left = this.props.x.toFixed(0);\r\n        let top = this.props.y.toFixed(0);\r\n        let transform = '';\r\n        if(this.props.dx < 0){\r\n        // going RTL\r\n        transform = 'scale(-1, 1) ';\r\n        } else{\r\n            // going LTR\r\n            transform = 'scale(1, 1) ';\r\n        }\r\n        if(this.props.dy < 0){\r\n            // going top to bottom\r\n            transform += ' rotate(-20deg) ';\r\n        } else{\r\n            transform += ' rotate(20deg) ';\r\n        }\r\n        let style = {\r\n            left: left+'px',\r\n            top: top+'px',\r\n            transform: transform,\r\n        };\r\n        return style;\r\n    }\r\n    clickEvent = () => {\r\n        console.log('clicked');\r\n        this.props.removeCell(this.props.id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyleString()} className={\"spermcell\"} onClick={this.clickEvent}>\r\n                <img src={`/assets/images/${this.props.type}.gif`} alt=\"\" className={this.props.type}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameCell;\r\n","import React, {Component} from 'react';\r\nimport UUID from \"uuid\";\r\nimport db from \"./db\";\r\nimport history from './history';\r\nimport GameCell from \"./GameCell\";\r\n\r\nclass Game extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settings: {\r\n                maxMoveX: 5,\r\n                maxMoveY: 5,\r\n                minMoveX: 1.5,\r\n                minMoveY: 1.5,\r\n                framePerSecond: 30,\r\n                goodBalls: 20,\r\n                badBalls: 7,\r\n                goodBallScore: 2,\r\n                badBallScore: -5,\r\n                time: 30,\r\n            },\r\n            currentScore: 0,\r\n            timeLeft: 0,\r\n            canvas: '',\r\n            balls: [],\r\n            runInterval: {},\r\n            cells: [],\r\n            name: '',\r\n            location: ''\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.props.location === '') {\r\n            history.push('/');\r\n        }\r\n        this.setState({\r\n            canvas: document.getElementById('gameboard'),\r\n        })\r\n        this.setState({\r\n            name: this.props.name,\r\n            location: this.props.location,\r\n        })\r\n        this.addCells();\r\n        this.run();\r\n    }\r\n\r\n    getMovementVal = (max, min) => {\r\n        return (Math.random() * (max - min) + min).toFixed(2) * ( Math.floor(Math.random()*2) === 1 ? 1 : -1 );\r\n    }\r\n\r\n\r\n\r\n    removeCell = (id) => {\r\n        let clickedCell = this.state.cells.find(x => {\r\n            return x.id == id;\r\n        });\r\n        let score = parseInt(clickedCell.score);\r\n        let type = clickedCell.type;\r\n        let newScore = this.state.currentScore + score;\r\n        this.setState({\r\n            currentScore: newScore\r\n        });\r\n\r\n        let cells = this.state.cells.filter(x => {\r\n            return x.id != id;\r\n        });\r\n        let newCell = this.getNewCell(type);\r\n        cells.push(newCell);\r\n        this.setState({\r\n            cells: cells,\r\n        })\r\n    };\r\n    getNewCell = (type) => {\r\n        let game = this;\r\n        let newCell = {\r\n            id: UUID.v4(),\r\n            x: Math.random() * (game.canvas.offsetWidth - (game.canvas.offsetWidth-game.canvas.offsetWidth)) + (game.canvas.offsetWidth-game.canvas.offsetWidth),\r\n            y: Math.random() * (game.canvas.offsetHeight - (game.canvas.offsetHeight-game.canvas.offsetHeight)) + (game.canvas.offsetHeight-game.canvas.offsetHeight),\r\n            dx: game.getMovementVal(game.state.settings.maxMoveX, game.state.settings.minMoveX),\r\n            dy: game.getMovementVal(game.state.settings.maxMoveY, game.state.settings.minMoveY),\r\n            type: type,\r\n        };\r\n        if(type == 'good'){\r\n            newCell.score = game.state.settings.goodBallScore;\r\n        } else if(type == 'bad'){\r\n            newCell.score = game.state.settings.badBallScore;\r\n        }\r\n        return newCell;\r\n    };\r\n    addCells = () => {\r\n        let tempCells = [];\r\n        let game = this;\r\n\r\n        for(let i=0; i < this.state.settings.goodBalls; i++)\r\n        {\r\n\r\n            let newCell = {\r\n                id: UUID.v4(),\r\n                x: Math.random() * (game.canvas.offsetWidth - (game.canvas.offsetWidth-game.canvas.offsetWidth)) + (game.canvas.offsetWidth-game.canvas.offsetWidth),\r\n                y: Math.random() * (game.canvas.offsetHeight - (game.canvas.offsetHeight-game.canvas.offsetHeight)) + (game.canvas.offsetHeight-game.canvas.offsetHeight),\r\n                dx: this.getMovementVal(this.state.settings.maxMoveX, this.state.settings.minMoveX),\r\n                dy: this.getMovementVal(this.state.settings.maxMoveY, this.state.settings.minMoveY),\r\n                type: \"good\",\r\n                score: game.state.settings.goodBallScore,\r\n            }\r\n            tempCells.push(newCell);\r\n        }\r\n\r\n\r\n        for( let i=0; i<this.state.settings.badBalls; i++)\r\n        {\r\n            let newCell = {\r\n                id: UUID.v4(),\r\n                x: Math.random() * (game.canvas.offsetWidth - (game.canvas.offsetWidth-game.canvas.offsetWidth)) + (game.canvas.offsetWidth-game.canvas.offsetWidth),\r\n                y: Math.random() * (game.canvas.offsetHeight - (game.canvas.offsetHeight-game.canvas.offsetHeight)) + (game.canvas.offsetHeight-game.canvas.offsetHeight),\r\n                dx: this.getMovementVal(this.state.settings.maxMoveX, this.state.settings.minMoveX),\r\n                dy: this.getMovementVal(this.state.settings.maxMoveY, this.state.settings.minMoveY),\r\n                type: \"bad\",\r\n                score: game.state.settings.badBallScore,\r\n            }\r\n            tempCells.push(newCell);\r\n        }\r\n\r\n        this.setState({\r\n            cells: tempCells,\r\n        })\r\n    };\r\n\r\n    endGame = () => {\r\n        let root = this;\r\n\r\n        this.setState({\r\n            cells: [],\r\n        })\r\n    };\r\n\r\n    run = () => {\r\n        let root = this;\r\n        this.gameTick();\r\n        this.startTimer();\r\n        setTimeout(function(){\r\n            /*root.showScoreboard();\r\n            root.resetInterval();\r\n            root.clearGame();\r\n            */\r\n        }, this.state.settings.time * 1000)\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n\r\n    moveCells = () => {\r\n        let cells = this.state.cells;\r\n        let canvas = this.canvas;\r\n        let newCells = [];\r\n        for( let i = 0; i<cells.length; i++){\r\n            let cell = cells[i];\r\n            let x = cell.x;\r\n            let y = cell.y;\r\n\r\n            let dx = cell.dx;\r\n            let dy = cell.dy;\r\n\r\n            // boundary logic\r\n            if(x < 0){\r\n                cell.dx = Math.abs(dx);\r\n            } else if(x > canvas.offsetWidth){\r\n                cell.dx = -Math.abs(dx);\r\n            }\r\n\r\n            if(y<0){\r\n                cell.dy = Math.abs(dy);\r\n            } else if(y > canvas.offsetHeight){\r\n                cell.dy = -Math.abs(dy);\r\n            }\r\n\r\n            cell.x+=cell.dx;\r\n            cell.y+=cell.dy;\r\n\r\n            newCells.push(cell);\r\n        }\r\n\r\n        this.setState({\r\n            cells: newCells,\r\n        })\r\n\r\n    };\r\n\r\n    gameTick = () => {\r\n        let root = this;\r\n        let gameTickInterval = setInterval( function( ) {\r\n            if(root.state.timeLeft > 0){\r\n                root.moveCells();\r\n            } else{\r\n                clearInterval(this);\r\n            }\r\n        }, 1000 / root.state.settings.framePerSecond);\r\n    };\r\n\r\n    startTimer = () => {\r\n        let root = this;\r\n        this.setState({\r\n            timeLeft: this.state.settings.time,\r\n        })\r\n        this.timerInterval = setInterval(() => {\r\n            if(root.state.timeLeft > 1){\r\n                root.setState({\r\n                    timeLeft: root.state.timeLeft -= 1\r\n                });\r\n            } else {\r\n                root.setState({\r\n                    timeLeft: \"Slut\",\r\n                })\r\n                clearInterval(this.timerInterval)\r\n                root.endGame();\r\n                const score = {\r\n                    Name: this.props.name,\r\n                    Location: this.props.location,\r\n                    Score: this.state.currentScore\r\n                  };\r\n                  db.table('Score').add(score);\r\n                  this.props.data();\r\n                  history.push(`/Rank/${this.props.name}/${this.state.currentScore}/${this.props.location}`);\r\n                }\r\n        }, 1000 )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"score\">\r\n                    <p>\r\n                        {this.props.name}\r\n                    </p>\r\n                    <hr/>\r\n                    <p>\r\n                        {this.props.location}\r\n                    </p>\r\n                    <hr/>\r\n                    <p>\r\n                        {this.state.currentScore}\r\n                    </p>\r\n                    <p>\r\n                        Time:\r\n                        <div id={\"timer\"}>\r\n                            {this.state.timeLeft}\r\n                        </div>\r\n                    </p>\r\n                </div>\r\n                <div ref={node => this.canvas = node}\r\n                    id={\"gameboard\"} style={{height: 500 + 'px'}}>\r\n                    {this.state.cells.map((el) =>\r\n                        <GameCell\r\n                            id={el.id}\r\n                            x={el.x}\r\n                            y={el.y}\r\n                            dx={el.dx}\r\n                            dy={el.dy}\r\n                            type={el.type}\r\n                            score={el.score}\r\n                            removeCell={this.removeCell}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div id={\"score-1\"} style={{display: \"none\"}}>\r\n                </div>\r\n                <div id={\"score-2\"} style={{display: \"none\"}}>\r\n                </div>\r\n                <div id={\"score-3\"} style={{display: \"none\"}}>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass  Name extends Component {\r\n\r\n    render() {\r\n        let list = [];\r\n        let all_scores = this.props.scores.sort(function (a,b) {\r\n            return b.Score - a.Score\r\n        })\r\n        for (let i = 0; i < this.props.scores.length; i ++ ) {\r\n            list.push(\r\n                <li>\r\n                    <h2>{i + 1}</h2>\r\n                    <p>Name: {all_scores[i].Name}</p>\r\n                    <p>Score: {all_scores[i].Score}</p>\r\n                    <p>Location: {all_scores[i].Location}</p>\r\n                </li>\r\n            )\r\n        };  \r\n         let pic = '';\r\n         let msg = '';\r\n        if (this.props.score > 50 ) {\r\n            pic = 'awesome';\r\n            msg='a designer baby';\r\n        } else if ( this.props.score > 25 ) {\r\n            pic = 'medium';\r\n            msg='an okay baby';\r\n        } else {\r\n            pic = 'bad';\r\n            msg='a retarded baby';\r\n        }\r\n\r\n        return (\r\n            <div className=\"rank\">\r\n            <div className=\"score_y\">\r\n            <h3>Congrats you got {msg}</h3>\r\n                <img src={'/assets/images/' + pic + '.png'} />\r\n            </div>\r\n                <div id=\"y_score\">\r\n                    <h3>Your score</h3>\r\n                    <p>Name: {this.props.name}</p>\r\n                    <p>Location: {this.props.location}</p>\r\n                    <p>Score: {this.props.score}</p>\r\n                </div>\r\n                <Link to={\"/Name\"}><button type=\"button\" className=\"btn\">Try again</button></Link>\r\n                <ul>{list}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Name;","import React, { Component } from 'react';\r\nimport db from './db';\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\nimport Location from \"./location\";\r\nimport Name from \"./name\";\r\nimport Game from \"./NewGame\";\r\nimport history from './history';\r\nimport Rankscore from './Rankscore';\r\n\r\n\r\nclass App extends Component {\r\n  API_URL = \"https://spermbank.herokuapp.com/api/\";\r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      Allscores: [],\r\n      score: 4,\r\n      sted: '',\r\n      name: '',\r\n      online: false\r\n    };\r\n    this.LocationSubmit = this.LocationSubmit.bind(this);\r\n    this.NameSubmit = this.NameSubmit.bind(this);\r\n    this.renderdata = this.renderdata.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderdata();\r\n    this.interval = setInterval(() => this.renderdata(), 5000);\r\n    this.getData();\r\n    this.audioplayer.play();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getData() {\r\n    if(navigator.onLine) {\r\n      fetch(`${this.API_URL}all`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              this.setState({\r\n                Allscores: data\r\n              });\r\n          })\r\n          .catch(error => {\r\n              console.error(\"Error when fetching: \", error);\r\n          })\r\n    } else {\r\n      db.table('Score')\r\n      .toArray()\r\n      .then((Score) => {\r\n        this.setState({ \r\n          Allscores: Score\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  LocationSubmit(event) {\r\n    event.preventDefault();\r\n    const location = event.target.location.value;\r\n    this.setState({ sted: location });\r\n    history.push(\"/Name\");\r\n  }\r\n\r\n  NameSubmit(event) {\r\n    event.preventDefault();\r\n    const name = event.target.name.value;\r\n    this.setState({ name: name });\r\n    history.push(\"/Game\");\r\n  }\r\n\r\n  renderdata() {\r\n    if(navigator.onLine) {\r\n      this.setState({\r\n        online: true\r\n      })\r\n      db.table('Score').toArray()\r\n      .then((Score) => {\r\n        if (Score.length > 0 ) {\r\n        for (let i = 0; i < Score.length; i++) {\r\n          let navn = Score[i].Name;\r\n          let lokation = Score[i].Location;\r\n          let nummer = Score[i].Score;\r\n          fetch(`${this.API_URL}add`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            Name: navn,\r\n            Location: lokation,\r\n            Score: nummer\r\n          })        \r\n          })\r\n          .catch(err => console.log(err));\r\n        }\r\n        db.table('Score').clear();\r\n      }\r\n      this.getData();\r\n      }).catch(er => console.log(er));\r\n    } else {\r\n      this.setState({\r\n        online: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <Router history={history}>\r\n      <div className={this.state.online ? \"container border_green\" : \"container border_red\"}>\r\n          <div>\r\n            <audio ref={node => this.audioplayer = node} src=\"/assets/images/music.mp3\" autoPlay loop/>\r\n          </div>\r\n          <Switch>\r\n              <Route exact path={'/'}\r\n                     render={(props) =>\r\n                         <Location {...props} LocationSubmit={this.LocationSubmit}></Location>}/>\r\n\r\n              <Route exact path={'/Name'}\r\n                     render={(props) =>\r\n                         <Name {...props} l={this.state.sted} NameSubmit={this.NameSubmit}></Name>}/>\r\n              \r\n              <Route exact path={'/Game'}\r\n                     render={(props) =>\r\n                         <Game {...props} \r\n                            location={this.state.sted} \r\n                            name={this.state.name} \r\n                            score={this.state.score}\r\n                            data={this.getData}></Game>}/>\r\n\r\n                <Route exact path={'/Rank/:name/:score/:location'}\r\n                     render={(props) =>\r\n                         <Rankscore {...props} \r\n                         score={props.match.params.score}\r\n                         name={props.match.params.name} \r\n                         location={props.match.params.location} \r\n                         scores={this.state.Allscores} \r\n                         renderdata={this.renderdata}></Rankscore>}/>\r\n\r\n              <Route component={NotFound} />\r\n          </Switch>\r\n\r\n      </div>\r\n  </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}